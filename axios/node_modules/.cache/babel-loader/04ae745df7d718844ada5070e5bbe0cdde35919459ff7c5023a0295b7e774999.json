{"ast":null,"code":"import axios from 'axios';\nconst request = axios.create({\n  baseURL: 'http://localhost:3000/',\n  timeout: 1000,\n  headers: {\n    'X-Custom-Header': 'foobar'\n  }\n});\n\n// LOAD USER\nconst loadUserSuccess = (users, page, pages) => ({\n  type: 'LOAD_USER_SUCCESS',\n  users,\n  page,\n  pages\n});\nconst loadUserFailure = () => ({\n  type: 'LOAD_USER_FAILURE'\n});\nexport const loadUser = () => (dispatch, getState) => request.get('users', {\n  params: getState().users.params\n}).then(_ref => {\n  let {\n    data\n  } = _ref;\n  dispatch(loadUserSuccess(data.data.users, data.data.page, data.data.pages));\n}).catch(err => {\n  dispatch(loadUserFailure());\n});\n\n// ADD USERS\nconst addUserSuccess = (id, user) => ({\n  type: 'ADD_USER_SUCCESS',\n  id,\n  user\n});\nconst addUserFailure = id => ({\n  type: 'ADD_USER_FAILURE',\n  id\n});\nexport const addUserRedux = (id, name, phone) => ({\n  type: 'ADD_USER',\n  id,\n  name,\n  phone\n});\nexport const addUser = (name, phone) => (dispatch, getState) => {\n  const id = Date.now();\n  let state = getState();\n  if (!state.users.params.query && dispatch(searchUser())) {\n    dispatch(addUserRedux(id, name, phone));\n  }\n  return request.post('users', {\n    name,\n    phone\n  }).then(response => {\n    dispatch(addUserSuccess(id, response.data.data));\n  }).catch(err => {\n    dispatch(addUserFailure(id));\n  });\n};\n\n// REMOVE USER\nconst removeUserSuccess = (id, user) => ({\n  type: 'REMOVE_USER_SUCCESS',\n  id,\n  user\n});\nconst removeUserFailure = () => ({\n  type: 'REMOVE_USER_FAILURE'\n});\nexport const removeUser = id => dispatch => {\n  return request.delete(`users/${id}`).then(response => {\n    dispatch(removeUserSuccess(id));\n  }).catch(err => {\n    dispatch(removeUserFailure());\n  });\n};\n\n// RESEND USER\nconst resendUserSuccess = (id, user) => ({\n  type: 'RESEND_USER_SUCCESS',\n  id,\n  user\n});\nconst resendUserFailure = () => ({\n  type: 'RESEND_USER_FAILURE'\n});\nexport const resendUser = _ref2 => {\n  let {\n    id,\n    name,\n    phone\n  } = _ref2;\n  return dispatch => {\n    return request.post(`users`, {\n      name,\n      phone\n    }).then(response => {\n      dispatch(resendUserSuccess(id, response.data.data));\n    }).catch(err => {\n      dispatch(resendUserFailure());\n    });\n  };\n};\n\n// UPDATE or EDIT USER\nconst updateUserSuccess = (id, user) => ({\n  type: 'UPDATE_USER_SUCCESS',\n  id,\n  user\n});\nconst updateUserFailure = () => ({\n  type: 'UPDATE_USER_FAILURE'\n});\nexport const updateUser = (id, name, phone) => dispatch => {\n  return request.put(`users/${id}`, {\n    name,\n    phone\n  }).then(response => {\n    dispatch(updateUserSuccess(id, response.data.data));\n  }).catch(err => {\n    dispatch(updateUserFailure());\n  });\n};\n\n// LOAD MORE USER\nconst loadMoreSuccess = user => ({\n  type: 'LOAD_MORE_SUCCESS',\n  user\n});\nconst loadMoreFailure = () => ({\n  type: 'LOAD_MORE_FAILURE'\n});\nexport const loadMore = () => (dispatch, getState) => {\n  let state = getState();\n  if (state.users.params.page <= state.users.params.pages) {\n    let params = {\n      ...state.users.params,\n      page: state.users.params.page + 1\n    };\n    request.get(`users`, {\n      params\n    }).then(response => {\n      params = {\n        ...params,\n        pages: response.data.data.pages\n      };\n      dispatch(loadMoreSuccess({\n        value: response.data.data.users,\n        params\n      }));\n    }).catch(err => {\n      dispatch(loadMoreFailure());\n    });\n  }\n};\n\n// SEARCH USER\nconst searchUserSuccess = user => ({\n  type: 'SEARCH_USER_SUCCESS',\n  user\n});\nconst searchUserFailure = () => ({\n  type: 'SEARCH_USER_FAILURE'\n});\nexport const searchUser = query => (dispatch, getState) => {\n  let state = getState();\n  let params = {\n    ...state.users.params,\n    ...query,\n    page: 1\n  };\n  return request.get(`users`, {\n    params\n  }).then(response => {\n    params = {\n      ...params,\n      pages: response.data.data.pages\n    };\n    dispatch(searchUserSuccess({\n      value: response.data.data.users,\n      params\n    }));\n  }).catch(err => {\n    dispatch(searchUserFailure());\n  });\n};\n\n// RESET SEARCH USER\nexport const resetQuery = () => async dispatch => {\n  await dispatch({\n    type: 'RESET_QUERY_SUCCESS'\n  });\n  dispatch(loadUser());\n};","map":{"version":3,"names":["axios","request","create","baseURL","timeout","headers","loadUserSuccess","users","page","pages","type","loadUserFailure","loadUser","dispatch","getState","get","params","then","_ref","data","catch","err","addUserSuccess","id","user","addUserFailure","addUserRedux","name","phone","addUser","Date","now","state","query","searchUser","post","response","removeUserSuccess","removeUserFailure","removeUser","delete","resendUserSuccess","resendUserFailure","resendUser","_ref2","updateUserSuccess","updateUserFailure","updateUser","put","loadMoreSuccess","loadMoreFailure","loadMore","value","searchUserSuccess","searchUserFailure","resetQuery"],"sources":["/home/fajar/Desktop/CHFAJAR/PhoneBook/axios/src/actions/users.js"],"sourcesContent":["import axios from 'axios'\n\nconst request = axios.create({\n    baseURL: 'http://localhost:3000/',\n    timeout: 1000,\n    headers: { 'X-Custom-Header': 'foobar' }\n});\n\n// LOAD USER\nconst loadUserSuccess = (users, page, pages) => ({\n    type: 'LOAD_USER_SUCCESS',\n    users,\n    page,\n    pages\n})\n\nconst loadUserFailure = () => ({\n    type: 'LOAD_USER_FAILURE'\n})\n\nexport const loadUser = () => (dispatch, getState) =>\n    request.get('users', { params: getState().users.params }).then(({ data }) => {\n        dispatch(loadUserSuccess(data.data.users, data.data.page, data.data.pages))\n    }).catch((err) => {\n        dispatch(loadUserFailure())\n    })\n\n// ADD USERS\nconst addUserSuccess = (id, user) => ({\n    type: 'ADD_USER_SUCCESS',\n    id,\n    user\n})\n\nconst addUserFailure = (id) => ({\n    type: 'ADD_USER_FAILURE',\n    id\n})\n\nexport const addUserRedux = (id, name, phone) => ({\n    type: 'ADD_USER',\n    id,\n    name,\n    phone\n})\n\nexport const addUser = (name, phone) => (dispatch, getState) => {\n    const id = Date.now()\n    let state = getState()\n    if (!state.users.params.query && dispatch(searchUser())) {\n        dispatch(addUserRedux(id, name, phone))\n    }\n    return request.post('users', { name, phone }).then((response) => {\n        dispatch(addUserSuccess(id, response.data.data))\n    }).catch((err) => {\n        dispatch(addUserFailure(id))\n    })\n}\n\n// REMOVE USER\nconst removeUserSuccess = (id, user) => ({\n    type: 'REMOVE_USER_SUCCESS',\n    id,\n    user\n})\n\nconst removeUserFailure = () => ({\n    type: 'REMOVE_USER_FAILURE'\n})\n\nexport const removeUser = (id) => dispatch => {\n    return request.delete(`users/${id}`).then((response) => {\n        dispatch(removeUserSuccess(id))\n    }).catch((err) => {\n        dispatch(removeUserFailure())\n    })\n}\n\n// RESEND USER\nconst resendUserSuccess = (id, user) => ({\n    type: 'RESEND_USER_SUCCESS',\n    id,\n    user\n})\n\nconst resendUserFailure = () => ({\n    type: 'RESEND_USER_FAILURE'\n})\n\nexport const resendUser = ({ id, name, phone }) => dispatch => {\n    return request.post(`users`, { name, phone }).then((response) => {\n        dispatch(resendUserSuccess(id, response.data.data))\n    }).catch((err) => {\n        dispatch(resendUserFailure())\n    })\n}\n\n// UPDATE or EDIT USER\nconst updateUserSuccess = (id, user) => ({\n    type: 'UPDATE_USER_SUCCESS',\n    id,\n    user\n})\n\nconst updateUserFailure = () => ({\n    type: 'UPDATE_USER_FAILURE'\n})\n\nexport const updateUser = (id, name, phone) => dispatch => {\n    return request.put(`users/${id}`, { name, phone }).then((response) => {\n        dispatch(updateUserSuccess(id, response.data.data))\n    }).catch((err) => {\n        dispatch(updateUserFailure())\n    })\n}\n\n// LOAD MORE USER\nconst loadMoreSuccess = (user) => ({\n    type: 'LOAD_MORE_SUCCESS',\n    user\n})\n\nconst loadMoreFailure = () => ({\n    type: 'LOAD_MORE_FAILURE',\n})\n\nexport const loadMore = () => (dispatch, getState) => {\n    let state = getState()\n    if (state.users.params.page <= state.users.params.pages) {\n        let params = {\n            ...state.users.params,\n            page: state.users.params.page + 1\n        }\n        request.get(`users`, { params }).then((response) => {\n            params = {\n                ...params,\n                pages: response.data.data.pages\n            }\n            dispatch(loadMoreSuccess({ value: response.data.data.users, params }))\n        }).catch((err) => {\n            dispatch(loadMoreFailure())\n        })\n    }\n}\n\n// SEARCH USER\nconst searchUserSuccess = (user) => ({\n    type: 'SEARCH_USER_SUCCESS',\n    user\n})\n\nconst searchUserFailure = () => ({\n    type: 'SEARCH_USER_FAILURE'\n})\n\nexport const searchUser = (query) => (dispatch, getState) => {\n    let state = getState()\n    let params = {\n        ...state.users.params,\n        ...query,\n        page: 1\n    }\n    return request.get(`users`, { params }).then((response) => {\n        params = {\n            ...params,\n            pages: response.data.data.pages\n        }\n        dispatch(searchUserSuccess({ value: response.data.data.users, params }))\n    }).catch((err) => {\n        dispatch(searchUserFailure())\n    })\n}\n\n// RESET SEARCH USER\nexport const resetQuery = () => async (dispatch) => {\n    await dispatch({\n        type: 'RESET_QUERY_SUCCESS'\n    })\n    dispatch(loadUser())\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}